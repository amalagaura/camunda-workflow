#spring.datasource.url=jdbc:h2:./camunda-db;DB_CLOSE_ON_EXIT=false


#DB_CLOSE_ON_EXIT is set to false to prevent the database from shutting down before test are complete.
spring.datasource.url=jdbc:h2:mem:camunda
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driverClassName=org.h2.Driver


#POSTGRESQL PROPERTIES LOCALHOST
# camunda.bpm.database.type=postgres

# spring.datasource.url=jdbc:postgresql://${CAMUNDA_DB_HOST:localhost}:${CAMUNDA_DB_PORT:5432}/${CAMUNDA_DB:camunda}

# spring.datasource.username=postgres
# spring.datasource.password=postgres

# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.datasource.driver-class-name=org.postgresql.Driver
# camunda.bpm.database.schema-update=true
# camunda.bpm.job-execution.active = true


# These are not supported when auto-creating the schema
#camunda.bpm.database.schema-name=camunda
#camunda.bpm.database.table-prefix=camunda.


#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

#spring.cloud.stream.bindings.output.destination=flowing-retail
#spring.cloud.stream.bindings.output.content-type=application/json
#spring.cloud.stream.bindings.input.destination=flowing-retail
#spring.cloud.stream.bindings.input.content-type=application/json
#spring.cloud.stream.bindings.input.group=order
#spring.cloud.stream.kafka.binder.zkNodes=localhost:2181
#spring.cloud.stream.kafka.binder.brokers=localhost:9092

#camunda.bpm.admin-user.id=demo
#camunda.bpm.admin-user.password=demo
#camunda.bpm.filter.create=All
#camunda.bpm.license-file=file:${user.home}/.camunda/license.txt

server.port=${CAMUNDA_PORT:8080}
#To turn on HTTP Basic Auth for Camunda, set the below variable to true or set an environment variable.
camunda.authentication=${CAMUNDA_AUTH:false}
